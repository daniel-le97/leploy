version: '3.7'

#
# This docker compose needs .env file.
# Copy .env.example to .env and modify.
#

networks:
  default:
    attachable: 'true'
    name: '${NEKO_ROOMS_TRAEFIK_NETWORK}'

services:
  traefik:
    image: 'traefik:2.4'
    restart: unless-stopped
    environment:
      - TZ
    ports:
      - '580:80'
      - '5443:443'
    volumes:
      - '/var/run/docker.sock:/var/run/docker.sock:ro'
      - '/portainer/Files/AppData/Config/traefik/traefik.yml:/etc/traefik/traefik.yml:ro'
      - '/portainer/Files/AppData/Config/traefik/usersfile:/usersfile:ro'
      - '/portainer/Files/AppData/Config/traefik/acme.json:/acme.json'
      - '/portainer/Files/AppData/Config/traefik/config:/config'

  neko-rooms:
    image: 'm1k1o/neko-rooms:latest'
    restart: unless-stopped
    environment:
      - TZ
      - NEKO_ROOMS_EPR
      - NEKO_ROOMS_NAT1TO1
      - NEKO_ROOMS_TRAEFIK_DOMAIN
      - NEKO_ROOMS_TRAEFIK_ENTRYPOINT
      - NEKO_ROOMS_TRAEFIK_CERTRESOLVER
      - NEKO_ROOMS_TRAEFIK_NETWORK
    volumes:
      - '/var/run/docker.sock:/var/run/docker.sock'
    labels:
      - traefik.enable=true
      - traefik.http.services.neko-rooms-frontend.loadbalancer.server.port=8080
      - 'traefik.http.routers.neko-rooms.entrypoints=${NEKO_ROOMS_TRAEFIK_ENTRYPOINT}'
      - 'traefik.http.routers.neko-rooms.rule=Host(`${NEKO_ROOMS_TRAEFIK_DOMAIN}`)'
      - traefik.http.routers.neko-rooms.tls=true
      - 'traefik.http.routers.neko-rooms.tls.certresolver=${NEKO_ROOMS_TRAEFIK_CERTRESOLVER}'
      - traefik.http.routers.neko-rooms.middlewares=basicauth@file
